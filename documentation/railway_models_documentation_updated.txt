# Railway Management System - Model Documentation

======================================================
Contents:
1. Station Model
2. Train Model
3. Coach Model
4. Route Model
5. Booking Model
6. BookingSeat Model
7. Seat Model
======================================================

[Previous content remains the same...]

----------------------------------------
7. SEAT MODEL
----------------------------------------

----- Migration (2024_01_01_000005_create_seats_table.php) -----

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateSeatsTable extends Migration
{
    public function up(): void
    {
        Schema::create('seats', function (Blueprint $table) {
            $table->id();
            $table->foreignId('coach_id')->constrained()->onDelete('cascade');
            $table->string('seat_number');
            $table->integer('row_number');
            $table->enum('position', ['window', 'middle', 'aisle']);
            $table->boolean('is_available')->default(true);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('seats');
    }
}

----- Factory (SeatFactory.php) -----

<?php

namespace Database\Factories;

use App\Models\Seat;
use Illuminate\Database\Eloquent\Factories\Factory;

class SeatFactory extends Factory
{
    protected $model = Seat::class;

    public function definition(): array
    {
        return [
            'coach_id' => \App\Models\Coach::factory(),
            'seat_number' => $this->faker->unique()->bothify('S##'),
            'row_number' => $this->faker->numberBetween(1, 20),
            'position' => $this->faker->randomElement(['window', 'middle', 'aisle']),
            'is_available' => true,
        ];
    }
}

----- Seeder (SeatSeeder.php) -----

<?php

namespace Database\Seeders;

use App\Models\Seat;
use Illuminate\Database\Seeder;

class SeatSeeder extends Seeder
{
    public function run(): void
    {
        // Get all coaches
        $coaches = \App\Models\Coach::all();
        
        foreach ($coaches as $coach) {
            $totalSeats = $coach->total_seats;
            $rows = ceil($totalSeats / 4); // 4 seats per row
            
            for ($row = 1; $row <= $rows; $row++) {
                // Create seats for each row (max 4 seats per row)
                $seatsInRow = min(4, $totalSeats - (($row - 1) * 4));
                
                for ($seat = 1; $seat <= $seatsInRow; $seat++) {
                    $position = match($seat) {
                        1 => 'window',
                        2 => 'middle',
                        3 => 'middle',
                        4 => 'window',
                        default => 'middle'
                    };
                    
                    Seat::create([
                        'coach_id' => $coach->id,
                        'seat_number' => $row . chr(64 + $seat), // 1A, 1B, 1C, 1D, 2A, etc.
                        'row_number' => $row,
                        'position' => $position,
                        'is_available' => true
                    ]);
                }
            }
        }
    }
}

----- Model (Seat.php) -----

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Seat extends Model
{
    use HasFactory;

    protected $fillable = [
        'coach_id',
        'seat_number',
        'row_number',
        'position',
        'is_available'
    ];

    protected $casts = [
        'is_available' => 'boolean'
    ];

    public function coach()
    {
        return $this->belongsTo(Coach::class);
    }

    public function bookingSeats()
    {
        return $this->hasMany(BookingSeat::class);
    }

    public function bookings()
    {
        return $this->belongsToMany(Booking::class, 'booking_seats');
    }
}
